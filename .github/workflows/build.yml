name: Build

on:
  push:
    branches: ["actions"]
    paths-ignore:
      - "**/README.md"
  pull_request:
    branches: ["actions"]
    paths-ignore:
      - "**/README.md"
env:
  PROJECT_PATH: "SharpTimer.csproj"
  PROJECT_NAME: "SharpTimer"
  OUTPUT_PATH: "./SharpTimer"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Extract Version Number
        id: extract_version
        run: |
          version=$(sed -n -E 's/.*ModuleVersion => \$"([0-9]+\.[0-9]+\.[0-9]+).*/\1/p' Globals.cs)
          echo "::set-output name=BUILD_NUMBER::$version"
          echo $version
          #  echo "${version}" >> $BUILD_NUMBER

  build:
    needs: prepare
    permissions: write-all
    runs-on: ubuntu-latest

    env:
      # BUILD_NUMBER: ${{ needs.prepare.outputs.version }}
      BUILD_NUMBER: 1.1.1

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} -c ${{ env.PROJECT_NAME }} -o ${{ env.OUTPUT_PATH }}

  publish:
    if: github.event_name == 'push'
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} -c ${{ env.PROJECT_NAME }} -o ${{ env.OUTPUT_PATH }}
      - name: Clean files
        run: |
          rm -f \
            ${{ env.OUTPUT_PATH }}/McMaster.NETCore.Plugins.dll \
            ${{ env.OUTPUT_PATH }}/Microsoft.DotNet.PlatformAbstractions.dll \
            ${{ env.OUTPUT_PATH }}/Microsoft.Extensions.DependencyModel.dll \
      - name: Zip
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: "zip"
          filename: "${{ env.PROJECT_NAME }}.zip"
          path: ${{ env.OUTPUT_PATH }}
      - name: CS2-DeleteLogs
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "${{ env.PROJECT_NAME }}.zip"
          name: "Build ${{ env.BUILD_NUMBER }}"
          tag: "build-${{ env.BUILD_NUMBER }}"
